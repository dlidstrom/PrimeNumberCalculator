function BigInteger(t,r,e){this.array=[],null!=t&&("number"==typeof t?this.fromNumber(t,r,e):null==r&&"string"!=typeof t?this.fromString(t,256):this.fromString(t,r))}function nbi(){return new BigInteger(null)}function am1(t,r,e,i,n,o){for(var s=this.array,a=e.array;--o>=0;){var p=r*s[t++]+a[i]+n
n=Math.floor(p/67108864),a[i++]=67108863&p}return n}function am2(t,r,e,i,n,o){for(var s=this.array,a=e.array,p=32767&r,h=r>>15;--o>=0;){var u=32767&s[t],f=s[t++]>>15,l=h*u+f*p
u=p*u+((32767&l)<<15)+a[i]+(1073741823&n),n=(u>>>30)+(l>>>15)+h*f+(n>>>30),a[i++]=1073741823&u}return n}function am3(t,r,e,i,n,o){for(var s=this.array,a=e.array,p=16383&r,h=r>>14;--o>=0;){var u=16383&s[t],f=s[t++]>>14,l=h*u+f*p
u=p*u+((16383&l)<<14)+a[i]+n,n=(u>>28)+(l>>14)+h*f,a[i++]=268435455&u}return n}function am4(t,r,e,i,n,o){for(var s=this.array,a=e.array,p=8191&r,h=r>>13;--o>=0;){var u=8191&s[t],f=s[t++]>>13,l=h*u+f*p
u=p*u+((8191&l)<<13)+a[i]+n,n=(u>>26)+(l>>13)+h*f,a[i++]=67108863&u}return n}function int2char(t){return BI_RM.charAt(t)}function intAt(t,r){var e=BI_RC[t.charCodeAt(r)]
return null==e?-1:e}function bnpCopyTo(t){for(var r=this.array,e=t.array,i=this.t-1;i>=0;--i)e[i]=r[i]
t.t=this.t,t.s=this.s}function bnpFromInt(t){var r=this.array
this.t=1,this.s=0>t?-1:0,t>0?r[0]=t:-1>t?r[0]=t+DV:this.t=0}function nbv(t){var r=nbi()
return r.fromInt(t),r}function bnpFromString(t,r){var e,i=this.array
if(16==r)e=4
else if(8==r)e=3
else if(256==r)e=8
else if(2==r)e=1
else if(32==r)e=5
else{if(4!=r)return void this.fromRadix(t,r)
e=2}this.t=0,this.s=0
for(var n=t.length,o=!1,s=0;--n>=0;){var a=8==e?255&t[n]:intAt(t,n)
0>a?"-"==t.charAt(n)&&(o=!0):(o=!1,0==s?i[this.t++]=a:s+e>BI_DB?(i[this.t-1]|=(a&(1<<BI_DB-s)-1)<<s,i[this.t++]=a>>BI_DB-s):i[this.t-1]|=a<<s,s+=e,s>=BI_DB&&(s-=BI_DB))}8==e&&0!=(128&t[0])&&(this.s=-1,s>0&&(i[this.t-1]|=(1<<BI_DB-s)-1<<s)),this.clamp(),o&&BigInteger.ZERO.subTo(this,this)}function bnpClamp(){for(var t=this.array,r=this.s&BI_DM;this.t>0&&t[this.t-1]==r;)--this.t}function bnToString(t){var r=this.array
if(this.s<0)return"-"+this.negate().toString(t)
var e
if(16==t)e=4
else if(8==t)e=3
else if(2==t)e=1
else if(32==t)e=5
else{if(4!=t)return this.toRadix(t)
e=2}var i,n=(1<<e)-1,o=!1,s="",a=this.t,p=BI_DB-a*BI_DB%e
if(a-->0)for(BI_DB>p&&(i=r[a]>>p)>0&&(o=!0,s=int2char(i));a>=0;)e>p?(i=(r[a]&(1<<p)-1)<<e-p,i|=r[--a]>>(p+=BI_DB-e)):(i=r[a]>>(p-=e)&n,0>=p&&(p+=BI_DB,--a)),i>0&&(o=!0),o&&(s+=int2char(i))
return o?s:"0"}function bnNegate(){var t=nbi()
return BigInteger.ZERO.subTo(this,t),t}function bnAbs(){return this.s<0?this.negate():this}function bnCompareTo(t){var r=this.array,e=t.array,i=this.s-t.s
if(0!=i)return i
var n=this.t
if(i=n-t.t,0!=i)return i
for(;--n>=0;)if(0!=(i=r[n]-e[n]))return i
return 0}function nbits(t){var r,e=1
return 0!=(r=t>>>16)&&(t=r,e+=16),0!=(r=t>>8)&&(t=r,e+=8),0!=(r=t>>4)&&(t=r,e+=4),0!=(r=t>>2)&&(t=r,e+=2),0!=(r=t>>1)&&(t=r,e+=1),e}function bnBitLength(){var t=this.array
return this.t<=0?0:BI_DB*(this.t-1)+nbits(t[this.t-1]^this.s&BI_DM)}function bnpDLShiftTo(t,r){var e,i=this.array,n=r.array
for(e=this.t-1;e>=0;--e)n[e+t]=i[e]
for(e=t-1;e>=0;--e)n[e]=0
r.t=this.t+t,r.s=this.s}function bnpDRShiftTo(t,r){for(var e=this.array,i=r.array,n=t;n<this.t;++n)i[n-t]=e[n]
r.t=Math.max(this.t-t,0),r.s=this.s}function bnpLShiftTo(t,r){var e,i=this.array,n=r.array,o=t%BI_DB,s=BI_DB-o,a=(1<<s)-1,p=Math.floor(t/BI_DB),h=this.s<<o&BI_DM
for(e=this.t-1;e>=0;--e)n[e+p+1]=i[e]>>s|h,h=(i[e]&a)<<o
for(e=p-1;e>=0;--e)n[e]=0
n[p]=h,r.t=this.t+p+1,r.s=this.s,r.clamp()}function bnpRShiftTo(t,r){var e=this.array,i=r.array
r.s=this.s
var n=Math.floor(t/BI_DB)
if(n>=this.t)return void(r.t=0)
var o=t%BI_DB,s=BI_DB-o,a=(1<<o)-1
i[0]=e[n]>>o
for(var p=n+1;p<this.t;++p)i[p-n-1]|=(e[p]&a)<<s,i[p-n]=e[p]>>o
o>0&&(i[this.t-n-1]|=(this.s&a)<<s),r.t=this.t-n,r.clamp()}function bnpSubTo(t,r){for(var e=this.array,i=r.array,n=t.array,o=0,s=0,a=Math.min(t.t,this.t);a>o;)s+=e[o]-n[o],i[o++]=s&BI_DM,s>>=BI_DB
if(t.t<this.t){for(s-=t.s;o<this.t;)s+=e[o],i[o++]=s&BI_DM,s>>=BI_DB
s+=this.s}else{for(s+=this.s;o<t.t;)s-=n[o],i[o++]=s&BI_DM,s>>=BI_DB
s-=t.s}r.s=0>s?-1:0,-1>s?i[o++]=BI_DV+s:s>0&&(i[o++]=s),r.t=o,r.clamp()}function bnpMultiplyTo(t,r){var e=(this.array,r.array),i=this.abs(),n=t.abs(),o=n.array,s=i.t
for(r.t=s+n.t;--s>=0;)e[s]=0
for(s=0;s<n.t;++s)e[s+i.t]=i.am(0,o[s],r,s,0,i.t)
r.s=0,r.clamp(),this.s!=t.s&&BigInteger.ZERO.subTo(r,r)}function bnpSquareTo(t){for(var r=this.abs(),e=r.array,i=t.array,n=t.t=2*r.t;--n>=0;)i[n]=0
for(n=0;n<r.t-1;++n){var o=r.am(n,e[n],t,2*n,0,1);(i[n+r.t]+=r.am(n+1,2*e[n],t,2*n+1,o,r.t-n-1))>=BI_DV&&(i[n+r.t]-=BI_DV,i[n+r.t+1]=1)}t.t>0&&(i[t.t-1]+=r.am(n,e[n],t,2*n,0,1)),t.s=0,t.clamp()}function bnpDivRemTo(t,r,e){var i=t.abs()
if(!(i.t<=0)){var n=this.abs()
if(n.t<i.t)return null!=r&&r.fromInt(0),void(null!=e&&this.copyTo(e))
null==e&&(e=nbi())
var o=nbi(),s=this.s,a=t.s,p=i.array,h=BI_DB-nbits(p[i.t-1])
h>0?(i.lShiftTo(h,o),n.lShiftTo(h,e)):(i.copyTo(o),n.copyTo(e))
var u=o.t,f=o.array,l=f[u-1]
if(0!=l){var b=l*(1<<BI_F1)+(u>1?f[u-2]>>BI_F2:0),g=BI_FV/b,c=(1<<BI_F1)/b,B=1<<BI_F2,d=e.t,m=d-u,y=null==r?nbi():r
o.dlShiftTo(m,y)
var v=e.array
for(e.compareTo(y)>=0&&(v[e.t++]=1,e.subTo(y,e)),BigInteger.ONE.dlShiftTo(u,y),y.subTo(o,o);o.t<u;)f[o.t++]=0
for(;--m>=0;){var I=v[--d]==l?BI_DM:Math.floor(v[d]*g+(v[d-1]+B)*c)
if((v[d]+=o.am(0,I,e,m,0,u))<I)for(o.dlShiftTo(m,y),e.subTo(y,e);v[d]<--I;)e.subTo(y,e)}null!=r&&(e.drShiftTo(u,r),s!=a&&BigInteger.ZERO.subTo(r,r)),e.t=u,e.clamp(),h>0&&e.rShiftTo(h,e),0>s&&BigInteger.ZERO.subTo(e,e)}}}function bnMod(t){var r=nbi()
return this.abs().divRemTo(t,null,r),this.s<0&&r.compareTo(BigInteger.ZERO)>0&&t.subTo(r,r),r}function Classic(t){this.m=t}function cConvert(t){return t.s<0||t.compareTo(this.m)>=0?t.mod(this.m):t}function cRevert(t){return t}function cReduce(t){t.divRemTo(this.m,null,t)}function cMulTo(t,r,e){t.multiplyTo(r,e),this.reduce(e)}function cSqrTo(t,r){t.squareTo(r),this.reduce(r)}function bnpInvDigit(){var t=this.array
if(this.t<1)return 0
var r=t[0]
if(0==(1&r))return 0
var e=3&r
return e=e*(2-(15&r)*e)&15,e=e*(2-(255&r)*e)&255,e=e*(2-((65535&r)*e&65535))&65535,e=e*(2-r*e%BI_DV)%BI_DV,e>0?BI_DV-e:-e}function Montgomery(t){this.m=t,this.mp=t.invDigit(),this.mpl=32767&this.mp,this.mph=this.mp>>15,this.um=(1<<BI_DB-15)-1,this.mt2=2*t.t}function montConvert(t){var r=nbi()
return t.abs().dlShiftTo(this.m.t,r),r.divRemTo(this.m,null,r),t.s<0&&r.compareTo(BigInteger.ZERO)>0&&this.m.subTo(r,r),r}function montRevert(t){var r=nbi()
return t.copyTo(r),this.reduce(r),r}function montReduce(t){for(var r=t.array;t.t<=this.mt2;)r[t.t++]=0
for(var e=0;e<this.m.t;++e){var i=32767&r[e],n=i*this.mpl+((i*this.mph+(r[e]>>15)*this.mpl&this.um)<<15)&BI_DM
for(i=e+this.m.t,r[i]+=this.m.am(0,n,t,e,0,this.m.t);r[i]>=BI_DV;)r[i]-=BI_DV,r[++i]++}t.clamp(),t.drShiftTo(this.m.t,t),t.compareTo(this.m)>=0&&t.subTo(this.m,t)}function montSqrTo(t,r){t.squareTo(r),this.reduce(r)}function montMulTo(t,r,e){t.multiplyTo(r,e),this.reduce(e)}function bnpIsEven(){var t=this.array
return 0==(this.t>0?1&t[0]:this.s)}function bnpExp(t,r){if(t>4294967295||1>t)return BigInteger.ONE
var e=nbi(),i=nbi(),n=r.convert(this),o=nbits(t)-1
for(n.copyTo(e);--o>=0;)if(r.sqrTo(e,i),(t&1<<o)>0)r.mulTo(i,n,e)
else{var s=e
e=i,i=s}return r.revert(e)}function bnModPowInt(t,r){var e
return e=256>t||r.isEven()?new Classic(r):new Montgomery(r),this.exp(t,e)}function bnClone(){var t=nbi()
return this.copyTo(t),t}function bnIntValue(){var t=this.array
if(this.s<0){if(1==this.t)return t[0]-BI_DV
if(0==this.t)return-1}else{if(1==this.t)return t[0]
if(0==this.t)return 0}return(t[1]&(1<<32-BI_DB)-1)<<BI_DB|t[0]}function bnByteValue(){var t=this.array
return 0==this.t?this.s:t[0]<<24>>24}function bnShortValue(){var t=this.array
return 0==this.t?this.s:t[0]<<16>>16}function bnpChunkSize(t){return Math.floor(Math.LN2*BI_DB/Math.log(t))}function bnSigNum(){var t=this.array
return this.s<0?-1:this.t<=0||1==this.t&&t[0]<=0?0:1}function bnpToRadix(t){if(null==t&&(t=10),0==this.signum()||2>t||t>36)return"0"
var r=this.chunkSize(t),e=Math.pow(t,r),i=nbv(e),n=nbi(),o=nbi(),s=""
for(this.divRemTo(i,n,o);n.signum()>0;)s=(e+o.intValue()).toString(t).substr(1)+s,n.divRemTo(i,n,o)
return o.intValue().toString(t)+s}function bnpFromRadix(t,r){this.fromInt(0),null==r&&(r=10)
for(var e=this.chunkSize(r),i=Math.pow(r,e),n=!1,o=0,s=0,a=0;a<t.length;++a){var p=intAt(t,a)
0>p?"-"==t.charAt(a)&&0==this.signum()&&(n=!0):(s=r*s+p,++o>=e&&(this.dMultiply(i),this.dAddOffset(s,0),o=0,s=0))}o>0&&(this.dMultiply(Math.pow(r,o)),this.dAddOffset(s,0)),n&&BigInteger.ZERO.subTo(this,this)}function bnpFromNumber(t,r,e){if("number"==typeof r)if(2>t)this.fromInt(1)
else for(this.fromNumber(t,e),this.testBit(t-1)||this.bitwiseTo(BigInteger.ONE.shiftLeft(t-1),op_or,this),this.isEven()&&this.dAddOffset(1,0);!this.isProbablePrime(r);)this.dAddOffset(2,0),this.bitLength()>t&&this.subTo(BigInteger.ONE.shiftLeft(t-1),this)
else{var i=[],n=7&t
i.length=(t>>3)+1,r.nextBytes(i),n>0?i[0]&=(1<<n)-1:i[0]=0,this.fromString(i,256)}}function bnToByteArray(){var t=this.array,r=this.t,e=[]
e[0]=this.s
var i,n=BI_DB-r*BI_DB%8,o=0
if(r-->0)for(BI_DB>n&&(i=t[r]>>n)!=(this.s&BI_DM)>>n&&(e[o++]=i|this.s<<BI_DB-n);r>=0;)8>n?(i=(t[r]&(1<<n)-1)<<8-n,i|=t[--r]>>(n+=BI_DB-8)):(i=t[r]>>(n-=8)&255,0>=n&&(n+=BI_DB,--r)),0!=(128&i)&&(i|=-256),0==o&&(128&this.s)!=(128&i)&&++o,(o>0||i!=this.s)&&(e[o++]=i)
return e}function bnEquals(t){return 0==this.compareTo(t)}function bnMin(t){return this.compareTo(t)<0?this:t}function bnMax(t){return this.compareTo(t)>0?this:t}function bnpBitwiseTo(t,r,e){var i,n,o=this.array,s=t.array,a=e.array,p=Math.min(t.t,this.t)
for(i=0;p>i;++i)a[i]=r(o[i],s[i])
if(t.t<this.t){for(n=t.s&BI_DM,i=p;i<this.t;++i)a[i]=r(o[i],n)
e.t=this.t}else{for(n=this.s&BI_DM,i=p;i<t.t;++i)a[i]=r(n,s[i])
e.t=t.t}e.s=r(this.s,t.s),e.clamp()}function op_and(t,r){return t&r}function bnAnd(t){var r=nbi()
return this.bitwiseTo(t,op_and,r),r}function op_or(t,r){return t|r}function bnOr(t){var r=nbi()
return this.bitwiseTo(t,op_or,r),r}function op_xor(t,r){return t^r}function bnXor(t){var r=nbi()
return this.bitwiseTo(t,op_xor,r),r}function op_andnot(t,r){return t&~r}function bnAndNot(t){var r=nbi()
return this.bitwiseTo(t,op_andnot,r),r}function bnNot(){for(var t=this.array,r=nbi(),e=r.array,i=0;i<this.t;++i)e[i]=BI_DM&~t[i]
return r.t=this.t,r.s=~this.s,r}function bnShiftLeft(t){var r=nbi()
return 0>t?this.rShiftTo(-t,r):this.lShiftTo(t,r),r}function bnShiftRight(t){var r=nbi()
return 0>t?this.lShiftTo(-t,r):this.rShiftTo(t,r),r}function lbit(t){if(0==t)return-1
var r=0
return 0==(65535&t)&&(t>>=16,r+=16),0==(255&t)&&(t>>=8,r+=8),0==(15&t)&&(t>>=4,r+=4),0==(3&t)&&(t>>=2,r+=2),0==(1&t)&&++r,r}function bnGetLowestSetBit(){for(var t=this.array,r=0;r<this.t;++r)if(0!=t[r])return r*BI_DB+lbit(t[r])
return this.s<0?this.t*BI_DB:-1}function cbit(t){for(var r=0;0!=t;)t&=t-1,++r
return r}function bnBitCount(){for(var t=0,r=this.s&BI_DM,e=0;e<this.t;++e)t+=cbit(this_array[e]^r)
return t}function bnTestBit(t){var r=this.array,e=Math.floor(t/BI_DB)
return e>=this.t?0!=this.s:0!=(r[e]&1<<t%BI_DB)}function bnpChangeBit(t,r){var e=BigInteger.ONE.shiftLeft(t)
return this.bitwiseTo(e,r,e),e}function bnSetBit(t){return this.changeBit(t,op_or)}function bnClearBit(t){return this.changeBit(t,op_andnot)}function bnFlipBit(t){return this.changeBit(t,op_xor)}function bnpAddTo(t,r){for(var e=this.array,i=t.array,n=r.array,o=0,s=0,a=Math.min(t.t,this.t);a>o;)s+=e[o]+i[o],n[o++]=s&BI_DM,s>>=BI_DB
if(t.t<this.t){for(s+=t.s;o<this.t;)s+=e[o],n[o++]=s&BI_DM,s>>=BI_DB
s+=this.s}else{for(s+=this.s;o<t.t;)s+=i[o],n[o++]=s&BI_DM,s>>=BI_DB
s+=t.s}r.s=0>s?-1:0,s>0?n[o++]=s:-1>s&&(n[o++]=BI_DV+s),r.t=o,r.clamp()}function bnAdd(t){var r=nbi()
return this.addTo(t,r),r}function bnSubtract(t){var r=nbi()
return this.subTo(t,r),r}function bnMultiply(t){var r=nbi()
return this.multiplyTo(t,r),r}function bnDivide(t){var r=nbi()
return this.divRemTo(t,r,null),r}function bnRemainder(t){var r=nbi()
return this.divRemTo(t,null,r),r}function bnDivideAndRemainder(t){var r=nbi(),e=nbi()
return this.divRemTo(t,r,e),[r,e]}function bnpDMultiply(t){var r=this.array
r[this.t]=this.am(0,t-1,this,0,0,this.t),++this.t,this.clamp()}function bnpDAddOffset(t,r){for(var e=this.array;this.t<=r;)e[this.t++]=0
for(e[r]+=t;e[r]>=BI_DV;)e[r]-=BI_DV,++r>=this.t&&(e[this.t++]=0),++e[r]}function NullExp(){}function nNop(t){return t}function nMulTo(t,r,e){t.multiplyTo(r,e)}function nSqrTo(t,r){t.squareTo(r)}function bnPow(t){return this.exp(t,new NullExp)}function bnpMultiplyLowerTo(t,r,e){var i=e.array,n=t.array,o=Math.min(this.t+t.t,r)
for(e.s=0,e.t=o;o>0;)i[--o]=0
var s
for(s=e.t-this.t;s>o;++o)i[o+this.t]=this.am(0,n[o],e,o,0,this.t)
for(s=Math.min(t.t,r);s>o;++o)this.am(0,n[o],e,o,0,r-o)
e.clamp()}function bnpMultiplyUpperTo(t,r,e){var i=e.array,n=t.array;--r
var o=e.t=this.t+t.t-r
for(e.s=0;--o>=0;)i[o]=0
for(o=Math.max(r-this.t,0);o<t.t;++o)i[this.t+o-r]=this.am(r-o,n[o],e,0,0,this.t+o-r)
e.clamp(),e.drShiftTo(1,e)}function Barrett(t){this.r2=nbi(),this.q3=nbi(),BigInteger.ONE.dlShiftTo(2*t.t,this.r2),this.mu=this.r2.divide(t),this.m=t}function barrettConvert(t){if(t.s<0||t.t>2*this.m.t)return t.mod(this.m)
if(t.compareTo(this.m)<0)return t
var r=nbi()
return t.copyTo(r),this.reduce(r),r}function barrettRevert(t){return t}function barrettReduce(t){for(t.drShiftTo(this.m.t-1,this.r2),t.t>this.m.t+1&&(t.t=this.m.t+1,t.clamp()),this.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3),this.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);t.compareTo(this.r2)<0;)t.dAddOffset(1,this.m.t+1)
for(t.subTo(this.r2,t);t.compareTo(this.m)>=0;)t.subTo(this.m,t)}function barrettSqrTo(t,r){t.squareTo(r),this.reduce(r)}function barrettMulTo(t,r,e){t.multiplyTo(r,e),this.reduce(e)}function bnModPow(t,r){var e,i,n=t.array,o=t.bitLength(),s=nbv(1)
if(0>=o)return s
e=18>o?1:48>o?3:144>o?4:768>o?5:6,i=8>o?new Classic(r):r.isEven()?new Barrett(r):new Montgomery(r)
var a=[],p=3,h=e-1,u=(1<<e)-1
if(a[1]=i.convert(this),e>1){var f=nbi()
for(i.sqrTo(a[1],f);u>=p;)a[p]=nbi(),i.mulTo(f,a[p-2],a[p]),p+=2}var l,b,g=t.t-1,c=!0,B=nbi()
for(o=nbits(n[g])-1;g>=0;){for(o>=h?l=n[g]>>o-h&u:(l=(n[g]&(1<<o+1)-1)<<h-o,g>0&&(l|=n[g-1]>>BI_DB+o-h)),p=e;0==(1&l);)l>>=1,--p
if((o-=p)<0&&(o+=BI_DB,--g),c)a[l].copyTo(s),c=!1
else{for(;p>1;)i.sqrTo(s,B),i.sqrTo(B,s),p-=2
p>0?i.sqrTo(s,B):(b=s,s=B,B=b),i.mulTo(B,a[l],s)}for(;g>=0&&0==(n[g]&1<<o);)i.sqrTo(s,B),b=s,s=B,B=b,--o<0&&(o=BI_DB-1,--g)}return i.revert(s)}function bnGCD(t){var r=this.s<0?this.negate():this.clone(),e=t.s<0?t.negate():t.clone()
if(r.compareTo(e)<0){var i=r
r=e,e=i}var n=r.getLowestSetBit(),o=e.getLowestSetBit()
if(0>o)return r
for(o>n&&(o=n),o>0&&(r.rShiftTo(o,r),e.rShiftTo(o,e));r.signum()>0;)(n=r.getLowestSetBit())>0&&r.rShiftTo(n,r),(n=e.getLowestSetBit())>0&&e.rShiftTo(n,e),r.compareTo(e)>=0?(r.subTo(e,r),r.rShiftTo(1,r)):(e.subTo(r,e),e.rShiftTo(1,e))
return o>0&&e.lShiftTo(o,e),e}function bnpModInt(t){var r=this.array
if(0>=t)return 0
var e=BI_DV%t,i=this.s<0?t-1:0
if(this.t>0)if(0==e)i=r[0]%t
else for(var n=this.t-1;n>=0;--n)i=(e*i+r[n])%t
return i}function bnModInverse(t){var r=t.isEven()
if(this.isEven()&&r||0==t.signum())return BigInteger.ZERO
for(var e=t.clone(),i=this.clone(),n=nbv(1),o=nbv(0),s=nbv(0),a=nbv(1);0!=e.signum();){for(;e.isEven();)e.rShiftTo(1,e),r?(n.isEven()&&o.isEven()||(n.addTo(this,n),o.subTo(t,o)),n.rShiftTo(1,n)):o.isEven()||o.subTo(t,o),o.rShiftTo(1,o)
for(;i.isEven();)i.rShiftTo(1,i),r?(s.isEven()&&a.isEven()||(s.addTo(this,s),a.subTo(t,a)),s.rShiftTo(1,s)):a.isEven()||a.subTo(t,a),a.rShiftTo(1,a)
e.compareTo(i)>=0?(e.subTo(i,e),r&&n.subTo(s,n),o.subTo(a,o)):(i.subTo(e,i),r&&s.subTo(n,s),a.subTo(o,a))}return 0!=i.compareTo(BigInteger.ONE)?BigInteger.ZERO:a.compareTo(t)>=0?a.subtract(t):a.signum()<0?(a.addTo(t,a),a.signum()<0?a.add(t):a):a}function bnIsProbablePrime(t){var r,e=this.abs(),i=e.array
if(1==e.t&&i[0]<=lowprimes[lowprimes.length-1]){for(r=0;r<lowprimes.length;++r)if(i[0]==lowprimes[r])return!0
return!1}if(e.isEven())return!1
for(r=1;r<lowprimes.length;){for(var n=lowprimes[r],o=r+1;o<lowprimes.length&&lplim>n;)n*=lowprimes[o++]
for(n=e.modInt(n);o>r;)if(n%lowprimes[r++]==0)return!1}return e.millerRabin(t)}function bnpMillerRabin(t){var r=this.subtract(BigInteger.ONE),e=r.getLowestSetBit()
if(0>=e)return!1
var i=r.shiftRight(e)
t=t+1>>1,t>lowprimes.length&&(t=lowprimes.length)
for(var n=nbi(),o=0;t>o;++o){n.fromInt(lowprimes[o])
var s=n.modPow(i,this)
if(0!=s.compareTo(BigInteger.ONE)&&0!=s.compareTo(r)){for(var a=1;a++<e&&0!=s.compareTo(r);)if(s=s.modPowInt(2,this),0==s.compareTo(BigInteger.ONE))return!1
if(0!=s.compareTo(r))return!1}}return!0}function Arcfour(){this.i=0,this.j=0,this.S=[]}function ARC4init(t){var r,e,i
for(r=0;256>r;++r)this.S[r]=r
for(e=0,r=0;256>r;++r)e=e+this.S[r]+t[r%t.length]&255,i=this.S[r],this.S[r]=this.S[e],this.S[e]=i
this.i=0,this.j=0}function ARC4next(){var t
return this.i=this.i+1&255,this.j=this.j+this.S[this.i]&255,t=this.S[this.i],this.S[this.i]=this.S[this.j],this.S[this.j]=t,this.S[t+this.S[this.i]&255]}function prng_newstate(){return new Arcfour}function rng_seed_int(t){rng_pool[rng_pptr++]^=255&t,rng_pool[rng_pptr++]^=t>>8&255,rng_pool[rng_pptr++]^=t>>16&255,rng_pool[rng_pptr++]^=t>>24&255,rng_pptr>=rng_psize&&(rng_pptr-=rng_psize)}function rng_seed_time(){rng_seed_int(1122926989487)}function rng_get_byte(){if(null==rng_state){for(rng_seed_time(),rng_state=prng_newstate(),rng_state.init(rng_pool),rng_pptr=0;rng_pptr<rng_pool.length;++rng_pptr)rng_pool[rng_pptr]=0
rng_pptr=0}return rng_state.next()}function rng_get_bytes(t){var r
for(r=0;r<t.length;++r)t[r]=rng_get_byte()}function SecureRandom(){}function parseBigInt(t,r){return new BigInteger(t,r)}function linebrk(t,r){for(var e="",i=0;i+r<t.length;)e+=t.substring(i,i+r)+"\n",i+=r
return e+t.substring(i,t.length)}function byte2Hex(t){return 16>t?"0"+t.toString(16):t.toString(16)}function pkcs1pad2(t,r){if(r<t.length+11)return alert("Message too long for RSA"),null
for(var e=[],i=t.length-1;i>=0&&r>0;)e[--r]=t.charCodeAt(i--)
e[--r]=0
for(var n=new SecureRandom,o=[];r>2;){for(o[0]=0;0==o[0];)n.nextBytes(o)
e[--r]=o[0]}return e[--r]=2,e[--r]=0,new BigInteger(e)}function RSAKey(){this.n=null,this.e=0,this.d=null,this.p=null,this.q=null,this.dmp1=null,this.dmq1=null,this.coeff=null}function RSASetPublic(t,r){null!=t&&null!=r&&t.length>0&&r.length>0?(this.n=parseBigInt(t,16),this.e=parseInt(r,16)):alert("Invalid RSA public key")}function RSADoPublic(t){return t.modPowInt(this.e,this.n)}function RSAEncrypt(t){var r=pkcs1pad2(t,this.n.bitLength()+7>>3)
if(null==r)return null
var e=this.doPublic(r)
if(null==e)return null
var i=e.toString(16)
return 0==(1&i.length)?i:"0"+i}function pkcs1unpad2(t,r){for(var e=t.toByteArray(),i=0;i<e.length&&0==e[i];)++i
if(e.length-i!=r-1||2!=e[i])return null
for(++i;0!=e[i];)if(++i>=e.length)return null
for(var n="";++i<e.length;)n+=String.fromCharCode(e[i])
return n}function RSASetPrivate(t,r,e){null!=t&&null!=r&&t.length>0&&r.length>0?(this.n=parseBigInt(t,16),this.e=parseInt(r,16),this.d=parseBigInt(e,16)):alert("Invalid RSA private key")}function RSASetPrivateEx(t,r,e,i,n,o,s,a){null!=t&&null!=r&&t.length>0&&r.length>0?(this.n=parseBigInt(t,16),this.e=parseInt(r,16),this.d=parseBigInt(e,16),this.p=parseBigInt(i,16),this.q=parseBigInt(n,16),this.dmp1=parseBigInt(o,16),this.dmq1=parseBigInt(s,16),this.coeff=parseBigInt(a,16)):alert("Invalid RSA private key")}function RSAGenerate(t,r){var e=new SecureRandom,i=t>>1
this.e=parseInt(r,16)
for(var n=new BigInteger(r,16);;){for(;this.p=new BigInteger(t-i,1,e),0!=this.p.subtract(BigInteger.ONE).gcd(n).compareTo(BigInteger.ONE)||!this.p.isProbablePrime(10););for(;this.q=new BigInteger(i,1,e),0!=this.q.subtract(BigInteger.ONE).gcd(n).compareTo(BigInteger.ONE)||!this.q.isProbablePrime(10););if(this.p.compareTo(this.q)<=0){var o=this.p
this.p=this.q,this.q=o}var s=this.p.subtract(BigInteger.ONE),a=this.q.subtract(BigInteger.ONE),p=s.multiply(a)
if(0==p.gcd(n).compareTo(BigInteger.ONE)){this.n=this.p.multiply(this.q),this.d=n.modInverse(p),this.dmp1=this.d.mod(s),this.dmq1=this.d.mod(a),this.coeff=this.q.modInverse(this.p)
break}}}function RSADoPrivate(t){if(null==this.p||null==this.q)return t.modPow(this.d,this.n)
for(var r=t.mod(this.p).modPow(this.dmp1,this.p),e=t.mod(this.q).modPow(this.dmq1,this.q);r.compareTo(e)<0;)r=r.add(this.p)
return r.subtract(e).multiply(this.coeff).mod(this.p).multiply(this.q).add(e)}function RSADecrypt(t){var r=parseBigInt(t,16),e=this.doPrivate(r)
return null==e?null:pkcs1unpad2(e,this.n.bitLength()+7>>3)}function encrypt(){var t=new RSAKey
t.setPublic(nValue,eValue),t.setPrivateEx(nValue,eValue,dValue,pValue,qValue,dmp1Value,dmq1Value,coeffValue),encrypted=t.encrypt(TEXT)}function decrypt(){var t=new RSAKey
t.setPublic(nValue,eValue),t.setPrivateEx(nValue,eValue,dValue,pValue,qValue,dmp1Value,dmq1Value,coeffValue)
var r=t.decrypt(encrypted)
if(r!=TEXT)throw Error("Crypto operation failed")}var dbits,BI_DB,BI_DM,BI_DV,BI_FP,BI_FV,BI_F1,BI_F2,canary=0xdeadbeefcafe,j_lm=15715070==(16777215&canary)
setupEngine=function(t,r){BigInteger.prototype.am=t,dbits=r,BI_DB=dbits,BI_DM=(1<<dbits)-1,BI_DV=1<<dbits,BI_FP=52,BI_FV=Math.pow(2,BI_FP),BI_F1=BI_FP-dbits,BI_F2=2*dbits-BI_FP}
var BI_RM="0123456789abcdefghijklmnopqrstuvwxyz",BI_RC=[],rr,vv
for(rr="0".charCodeAt(0),vv=0;9>=vv;++vv)BI_RC[rr++]=vv
for(rr="a".charCodeAt(0),vv=10;36>vv;++vv)BI_RC[rr++]=vv
for(rr="A".charCodeAt(0),vv=10;36>vv;++vv)BI_RC[rr++]=vv
Classic.prototype.convert=cConvert,Classic.prototype.revert=cRevert,Classic.prototype.reduce=cReduce,Classic.prototype.mulTo=cMulTo,Classic.prototype.sqrTo=cSqrTo,Montgomery.prototype.convert=montConvert,Montgomery.prototype.revert=montRevert,Montgomery.prototype.reduce=montReduce,Montgomery.prototype.mulTo=montMulTo,Montgomery.prototype.sqrTo=montSqrTo,BigInteger.prototype.copyTo=bnpCopyTo,BigInteger.prototype.fromInt=bnpFromInt,BigInteger.prototype.fromString=bnpFromString,BigInteger.prototype.clamp=bnpClamp,BigInteger.prototype.dlShiftTo=bnpDLShiftTo,BigInteger.prototype.drShiftTo=bnpDRShiftTo,BigInteger.prototype.lShiftTo=bnpLShiftTo,BigInteger.prototype.rShiftTo=bnpRShiftTo,BigInteger.prototype.subTo=bnpSubTo,BigInteger.prototype.multiplyTo=bnpMultiplyTo,BigInteger.prototype.squareTo=bnpSquareTo,BigInteger.prototype.divRemTo=bnpDivRemTo,BigInteger.prototype.invDigit=bnpInvDigit,BigInteger.prototype.isEven=bnpIsEven,BigInteger.prototype.exp=bnpExp,BigInteger.prototype.toString=bnToString,BigInteger.prototype.negate=bnNegate,BigInteger.prototype.abs=bnAbs,BigInteger.prototype.compareTo=bnCompareTo,BigInteger.prototype.bitLength=bnBitLength,BigInteger.prototype.mod=bnMod,BigInteger.prototype.modPowInt=bnModPowInt,BigInteger.ZERO=nbv(0),BigInteger.ONE=nbv(1),NullExp.prototype.convert=nNop,NullExp.prototype.revert=nNop,NullExp.prototype.mulTo=nMulTo,NullExp.prototype.sqrTo=nSqrTo,Barrett.prototype.convert=barrettConvert,Barrett.prototype.revert=barrettRevert,Barrett.prototype.reduce=barrettReduce,Barrett.prototype.mulTo=barrettMulTo,Barrett.prototype.sqrTo=barrettSqrTo
var lowprimes=[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509],lplim=(1<<26)/lowprimes[lowprimes.length-1]
BigInteger.prototype.chunkSize=bnpChunkSize,BigInteger.prototype.toRadix=bnpToRadix,BigInteger.prototype.fromRadix=bnpFromRadix,BigInteger.prototype.fromNumber=bnpFromNumber,BigInteger.prototype.bitwiseTo=bnpBitwiseTo,BigInteger.prototype.changeBit=bnpChangeBit,BigInteger.prototype.addTo=bnpAddTo,BigInteger.prototype.dMultiply=bnpDMultiply,BigInteger.prototype.dAddOffset=bnpDAddOffset,BigInteger.prototype.multiplyLowerTo=bnpMultiplyLowerTo,BigInteger.prototype.multiplyUpperTo=bnpMultiplyUpperTo,BigInteger.prototype.modInt=bnpModInt,BigInteger.prototype.millerRabin=bnpMillerRabin,BigInteger.prototype.clone=bnClone,BigInteger.prototype.intValue=bnIntValue,BigInteger.prototype.byteValue=bnByteValue,BigInteger.prototype.shortValue=bnShortValue,BigInteger.prototype.signum=bnSigNum,BigInteger.prototype.toByteArray=bnToByteArray,BigInteger.prototype.equals=bnEquals,BigInteger.prototype.min=bnMin,BigInteger.prototype.max=bnMax,BigInteger.prototype.and=bnAnd,BigInteger.prototype.or=bnOr,BigInteger.prototype.xor=bnXor,BigInteger.prototype.andNot=bnAndNot,BigInteger.prototype.not=bnNot,BigInteger.prototype.shiftLeft=bnShiftLeft,BigInteger.prototype.shiftRight=bnShiftRight,BigInteger.prototype.getLowestSetBit=bnGetLowestSetBit,BigInteger.prototype.bitCount=bnBitCount,BigInteger.prototype.testBit=bnTestBit,BigInteger.prototype.setBit=bnSetBit,BigInteger.prototype.clearBit=bnClearBit,BigInteger.prototype.flipBit=bnFlipBit,BigInteger.prototype.add=bnAdd,BigInteger.prototype.subtract=bnSubtract,BigInteger.prototype.multiply=bnMultiply,BigInteger.prototype.divide=bnDivide,BigInteger.prototype.remainder=bnRemainder,BigInteger.prototype.divideAndRemainder=bnDivideAndRemainder,BigInteger.prototype.modPow=bnModPow,BigInteger.prototype.modInverse=bnModInverse,BigInteger.prototype.pow=bnPow,BigInteger.prototype.gcd=bnGCD,BigInteger.prototype.isProbablePrime=bnIsProbablePrime,Arcfour.prototype.init=ARC4init,Arcfour.prototype.next=ARC4next
var rng_psize=256,rng_state,rng_pool,rng_pptr
if(null==rng_pool){rng_pool=[],rng_pptr=0
for(var t;rng_psize>rng_pptr;)t=Math.floor(65536*Math.random()),rng_pool[rng_pptr++]=t>>>8,rng_pool[rng_pptr++]=255&t
rng_pptr=0,rng_seed_time()}SecureRandom.prototype.nextBytes=rng_get_bytes,RSAKey.prototype.doPublic=RSADoPublic,RSAKey.prototype.setPublic=RSASetPublic,RSAKey.prototype.encrypt=RSAEncrypt,RSAKey.prototype.doPrivate=RSADoPrivate,RSAKey.prototype.setPrivate=RSASetPrivate,RSAKey.prototype.setPrivateEx=RSASetPrivateEx,RSAKey.prototype.generate=RSAGenerate,RSAKey.prototype.decrypt=RSADecrypt,nValue="a5261939975948bb7a58dffe5ff54e65f0498f9175f5a09288810b8975871e99af3b5dd94057b0fc07535f5f97444504fa35169d461d0d30cf0192e307727c065168c788771c561a9400fb49175e9e6aa4e23fe11af69e9412dd23b0cb6684c4c2429bce139e848ab26d0829073351f4acd36074eafd036a5eb83359d2a698d3",eValue="10001",dValue="8e9912f6d3645894e8d38cb58c0db81ff516cf4c7e5a14c7f1eddb1459d2cded4d8d293fc97aee6aefb861859c8b6a3d1dfe710463e1f9ddc72048c09751971c4a580aa51eb523357a3cc48d31cfad1d4a165066ed92d4748fb6571211da5cb14bc11b6e2df7c1a559e6d5ac1cd5c94703a22891464fba23d0d965086277a161",pValue="d090ce58a92c75233a6486cb0a9209bf3583b64f540c76f5294bb97d285eed33aec220bde14b2417951178ac152ceab6da7090905b478195498b352048f15e7d",qValue="cab575dc652bb66df15a0359609d51d1db184750c00c6698b90ef3465c99655103edbf0d54c56aec0ce3c4d22592338092a126a0cc49f65a4a30d222b411e58f",dmp1Value="1a24bca8e273df2f0e47c199bbf678604e7df7215480c77c8db39f49b000ce2cf7500038acfff5433b7d582a01f1826e6f4d42e1c57f5e1fef7b12aabc59fd25",dmq1Value="3d06982efbbe47339e1f6d36b1216b8a741d410b0c662f54f7118b27b9a4ec9d914337eb39841d8666f3034408cf94f5b62f11c402fc994fe15a05493150d9fd",coeffValue="3a3e731acd8960b7ff9eb81a7ff93bd1cfa74cbd56987db58b4594fb09c09084db1734c8143f98b602b981aaa9243ca28deb69b5b280ee8dcee0fd2625e53250",setupEngine(am3,28)
var TEXT="The quick brown fox jumped over the extremely lazy frog! Now is the time for all good men to come to the party.",encrypted
